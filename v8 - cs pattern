//@version=5
indicator("Candlestick Pattern Detector (Closed Candles)", overlay=true)

// Function to detect Bullish Engulfing
bullishEngulfing = close[1] < open[1] and close > open and close >= open[1] and open <= close[1]

// Function to detect Bearish Engulfing
bearishEngulfing = close[1] > open[1] and close < open and close <= open[1] and open >= close[1]

// Function to detect Hammer
hammer = (high - low) > 3 * (open - close) and 
         (close - low) / (high - low) > 0.6 and 
         (open - low) / (high - low) > 0.6

// Function to detect Inverse Hammer
inverseHammer = (high - low) > 3 * (open - close) and 
                 (high - close) >= 2 * math.abs(open - close) and 
                 (close - low) <= 0.01 * math.abs(open - close)

// Function to detect Shooting Star
shootingStar = (high - low) > 3 * (open - close) and    (high - close) >= 2 * math.abs(open - close) and   (close - low) <= 0.01 * math.abs(open - close)

// Function to detect Morning Star
morningStar = close[2] < open[2] and close[1] < open[1] and close > open and close > open[2]

// Function to detect Evening Star
eveningStar = close[2] > open[2] and close[1] > open[1] and close < open and close < open[2]

// Function to detect Piercing Line
piercingLine = close[1] < open[1] and open < close[1] and close > (open[1] + close[1]) / 2

// Function to detect Dark Cloud Cover
darkCloudCover = close[1] > open[1] and open > close[1] and close < (open[1] + close[1]) / 2

// Function to detect Three White Soldiers
threeWhiteSoldiers = close > open and close[1] > open[1] and close[2] > open[2]

// Function to detect Three Black Crows
threeBlackCrows = close < open and close[1] < open[1] and close[2] < open[2]

// Function to detect Hanging Man
hangingMan = ((high - math.max(open, close)) >= 2 * math.abs(open - close)) and ((math.min(open, close) - low) <= 0.01 * math.abs(open - close))

// Function to detect Doji
doji = math.abs(close - open) <= 0.01 * (high - low)

// Variable to track if a label has been created for the current bar
var bool labelCreated = false

// Only evaluate patterns on the closed candle
if bar_index != bar_index[1]
    labelCreated := false // Reset for new candle

    // Check for patterns in order of priority
    if bullishEngulfing and not labelCreated
        label.new(bar_index, low, "Bullish\nEngulfing", style=label.style_label_up, color=color.green, textcolor=color.white, size=size.normal)
        labelCreated := true

    if bearishEngulfing and not labelCreated
        label.new(bar_index, high, "Bearish\nEngulfing", style=label.style_label_down, color=color.red, textcolor=color.white, size=size.normal)
        labelCreated := true

    if hammer and not labelCreated
        label.new(bar_index, low, "Hammer", style=label.style_label_up, color=color.green, textcolor=color.white, size=size.normal)
        labelCreated := true

    if inverseHammer and not labelCreated
        label.new(bar_index, high, "Inverse\nHammer", style=label.style_label_up, color=color.green, textcolor=color.white, size=size.normal)
        labelCreated := true

    if shootingStar and not labelCreated
        label.new(bar_index, high, "Shooting\nStar", style=label.style_label_down, color=color.red, textcolor=color.white, size=size.normal)
        labelCreated := true

    if morningStar and not labelCreated
        label.new(bar_index, low, "Morning\nStar", style=label.style_label_up, color=color.green, textcolor=color.white, size=size.normal)
        labelCreated := true

    if eveningStar and not labelCreated
        label.new(bar_index, high, "Evening\nStar", style=label.style_label_down, color=color.red, textcolor=color.white, size=size.normal)
        labelCreated := true

    if piercingLine and not labelCreated
        label.new(bar_index, low, "Piercing\nLine", style=label.style_label_up, color=color.green, textcolor=color.white, size=size.normal)
        labelCreated := true

    if darkCloudCover and not labelCreated
        label.new(bar_index, high, "Dark\nCloud\nCover", style=label.style_label_down, color=color.red, textcolor=color.white, size=size.normal)
        labelCreated := true

    if threeWhiteSoldiers and not labelCreated
        label.new(bar_index, low, "Three\nWhite\nSoldiers", style=label.style_label_up, color=color.green, textcolor=color.white, size=size.normal)
        labelCreated := true

    if threeBlackCrows and not labelCreated 
        label.new(bar_index , high , "Three\nBlack\nCrows" , style=label.style_label_down , color=color.red , textcolor=color.white , size=size.normal)
        labelCreated := true 

    if hangingMan and not labelCreated 
        label.new(bar_index , high , "Hanging\nMan" , style=label.style_label_down , color=color.red , textcolor=color.white , size=size.normal)
        labelCreated := true 

    if doji and not labelCreated 
        label.new(bar_index , high , "Doji" , style=label.style_label_down , color=color.gray , textcolor=color.white , size=size.normal)

